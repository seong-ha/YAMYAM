<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mandu.yamyam.pro.mapper.ProMapper">

	<!-- 생산 지시 우선순위 조회 -->
	<select id="getPoddPrio" resultType="Integer">
		SELECT NVL(MAX(podd_prio),0)+1 AS podd_prio
		  FROM p_odd 
		 WHERE TRUNC(podd_dates) = #{poddDates}
	</select>
	
	<!-- 생산계획조회 -->
	<select id="getPlan" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT DISTINCT TO_CHAR(l.ppln_date,'yyyy-MM-dd') AS ppln_date, 
		       l.ppln_cd, 
		       l.od_cd, 
		       l.ppln_name, 
		       find_code_name(d.pplnd_sts) AS pplnd_sts
		 FROM p_pln l 
		 JOIN p_plnd d 
		   ON l.ppln_cd = d.ppln_cd
		<where>
            <if test='startDate!= null and endDate != null'>
               TRUNC(l.PPLN_DATE) BETWEEN #{startDate}
                     AND #{endDate}
            </if>
        </where>
         ORDER BY ppln_date DESC
	</select>
	
	
	<!-- 상세생산계획조회 -->
	<select id="getPlanDetail" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT p.ppln_cd, p.ppln_name, d.pplnd_cd, d.prd_cd, d.pplnd_amt, d.pplnd_prio, d.pplnd_days, find_code_name(d.pplnd_sts) AS pplnd_sts, c.prd_nm
		  FROM p_pln p 
		  JOIN p_plnd d
            ON p.ppln_cd = d.ppln_cd
          JOIN c_prd c
            ON c.prd_cd = d.prd_cd
		 WHERE p.ppln_cd = #{pplnCd}            		 
		<where>
            <if test='startDate!= null and endDate != null'>
               TRUNC(p.ppln_date) BETWEEN #{startDate}
                     AND #{endDate}
            </if>
        </where>
        ORDER BY d.pplnd_prio
        
	</select>
	
	
	<!-- 생산계획 등록 -->
	<insert id="insertPlan" parameterType="com.mandu.yamyam.pro.service.ProVO">
		<selectKey keyProperty="pplnCd" resultType="String" order="BEFORE">
			SELECT mk_ppln_cd FROM dual
		</selectKey>
		INSERT INTO p_pln(
							<if test="pplnDate != null">
							ppln_date,
					 		</if>							
							ppln_cd,
							od_cd,
							ppln_name
							)
		
					values(
							<if test="pplnDate != null">
							#{pplnDate},
					 		</if>
							#{pplnCd},
							#{odCd},
							#{pplnName}
						   )
	</insert>
	
	
	<!-- 상세생산계획 등록 -->
	<insert id="insertPlanDetail" parameterType="com.mandu.yamyam.pro.service.ProVO">
		<selectKey keyProperty="pplndCd" resultType="String" order="BEFORE">
			SELECT mk_pplnd_cd FROM dual
		</selectKey>
		INSERT INTO p_plnd(
							pplnd_cd,
							ppln_cd,
							ppln_date,
							pplnd_prio,
							pplnd_days,
							prd_cd,
							pplnd_amt

							)
		
					values(
							#{pplndCd},
							#{pplnCd},
							#{pplnDate},
							#{pplndPrio},
							#{pplndDays},
							#{prdCd},
							#{pplndAmt}
						   )
	</insert>
	
	<!-- 생산요청서 진행사항 수정(계획등록시) -->
	<update id="updateBpod" parameterType="com.mandu.yamyam.pro.service.ProVO">
		UPDATE b_pod
		SET rqt_sts = 'RQT-STS2'
		WHERE od_cd = #{odCd}
	</update>
	
	
	<!-- 생산계획 우선순위, 생산일자 수정 -->
	<update id="updatePlanDetail" parameterType="com.mandu.yamyam.pro.service.ProVO">
		UPDATE p_plnd
		   SET
		   			pplnd_prio = #{pplndPrio},
		   			pplnd_days = #{pplndDays},
		   			pplnd_amt = #{pplndAmt}
		 WHERE pplnd_cd = #{pplndCd}
	</update>
	
	<!-- 상세 생산계획 삭제 -->
	<delete id="deletePlanDetail" parameterType="com.mandu.yamyam.pro.service.ProVO">
		DELETE FROM p_plnd
		WHERE pplnd_cd = #{pplndCd}
	</delete>
	
	<!-- 생산요청서 진행사항 수정(계획삭제시) -->
	<update id="updateBpod2" parameterType="com.mandu.yamyam.pro.service.ProVO">
		UPDATE b_pod
		SET rqt_sts = 'RQT-STS1'
		WHERE od_cd = #{odCd}
	</update>
	
	<!-- 생산계획 삭제 -->
	<delete id="deletePlan" parameterType="com.mandu.yamyam.pro.service.ProVO">
		DELETE FROM p_pln
		WHERE ppln_cd = #{pplnCd}
	</delete>
	
	<!-- 생산계획 상세 개수 -->
	<select id="detailCnt" resultType="Integer">
		SELECT COUNT(*)
		FROM p_plnd
		WHERE ppln_cd = #{pplnCd}
	</select>
	
	 
	<!-- 생산요청서 -->
	<select id="orderList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT p.od_cd, p.prd_cd, c.prd_nm ,p.rqt_amt, TO_CHAR(b.de_date,'yyyy-MM-dd') AS de_date
		  FROM b_pod p
		  JOIN b_od b
		    ON p.od_cd = b.od_cd
          JOIN c_prd c
            ON c.prd_cd = b.prd_cd
	 	 WHERE p.rqt_sts = 'RQT-STS1'
	 	 ORDER BY de_date DESC
	</select>
	
	<!-- 제품목록 조회 -->
	<select id="materialList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT prd_cd, prd_nm
		FROM c_prd
	</select>
	
	<!-- 미지시계획 조회 -->
	<select id="noOrderList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT TO_CHAR(d.ppln_date,'yyyy-MM-dd') AS ppln_date,
			   d.pplnd_cd, p.ppln_cd, p.ppln_name, d.pplnd_cd,
			   c.prd_nm, d.pplnd_amt,d.pplnd_days, c.prd_cd
		  FROM p_pln p
	 	  JOIN p_plnd d
	 	    ON p.ppln_cd = d.ppln_cd
          JOIN c_prd c
            ON c.prd_cd = d.prd_cd
          WHERE d.pplnd_sts='PLN-STS2'
            <if test='startDate!= null and endDate != null'>
               AND TRUNC(d.ppln_date) BETWEEN #{startDate} AND #{endDate} 
            </if>
	</select>
	
	<!-- 생산라인 조회 -->
	<select id="lineList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT p.pplnd_cd, l.pline_cd, p.prd_cd
		  FROM p_plnd p
		  JOIN p_line l
		    ON p.prd_cd = l.prd_cd 
		 WHERE p.PRD_CD = #{prdCd} 
	</select>
	
	
	<!-- 생산지시 등록 -->
	<insert id="insertOrder" parameterType="com.mandu.yamyam.pro.service.ProVO">
		<selectKey keyProperty="podCd" resultType="String" order="BEFORE">
			SELECT mk_pod_cd FROM DUAL
		</selectKey>
		INSERT INTO p_od (
						  pod_cd,
						  pplnd_cd,
						  prd_cd,
						  pline_cd
						  )
				   VALUES(
				   		   #{podCd},
				   		   #{pplndCd},
				   		   #{prdCd},
				   		   #{plineCd})
	</insert>
	
	
	<!-- 상세 생산지시 등록 -->
	<insert id="insertOrderDetail" parameterType="com.mandu.yamyam.pro.service.ProVO">
		<selectKey keyProperty="poddCd" resultType="String" order="BEFORE">
			SELECT mk_podd_cd FROM DUAL
		</selectKey>
		INSERT INTO P_ODD(
							PODD_CD,
							POD_CD,
							PODD_AMT,
							PODD_DATES,
							PODD_PRIO
						  )
					VALUES( #{poddCd},
						    #{podCd},
						    #{poddAmt},
						    #{poddDates},
						    #{poddPrio})
	</insert>
	
	<!-- 생산지시 조회 -->
	<select id="getOrderList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT o.pod_cd, od.podd_cd,c.prd_nm, o.prd_cd, od.podd_amt,
			   o.pline_cd, od.podd_prio, find_code_name(od.podd_sts) AS podd_sts,
		       TO_CHAR(o.pod_dates,'yyyy-MM-dd') as pod_dates
		  FROM p_od o	
		  JOIN p_odd od
		    ON o.pod_cd= od.pod_cd
	      JOIN c_prd c
	        ON o.prd_cd = c.prd_cd
	    WHERE
	    	TRUNC(od.podd_dates) BETWEEN (od.podd_dates-7) AND (od.podd_dates+7)
	        <if test='startDate!= null and endDate != null'>
	            AND TRUNC(od.podd_dates) BETWEEN #{startDate} AND #{endDate}
	        </if>
		order by 1,2,7             	
	</select>
	
	
	<!-- 상세 생산계획 테이블 진행구분 업데이트(미지시 -> 지시완료)-->
	<update id="updatePplnd" parameterType="com.mandu.yamyam.pro.service.ProVO">
		UPDATE p_plnd
		   SET pplnd_sts = 'PLN-STS3'
		 WHERE pplnd_cd = (SELECT pplnd_cd
		                     FROM p_od
		                    WHERE POD_CD = #{podCd})
	</update>
	
	
	<!-- 생산관리 : 생산지시 목록 조회 -->
	<select id="getOProList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT p.pline_cd, c.prd_nm, d.podd_cd, p.prd_cd, d.podd_amt, find_code_name(d.podd_sts) AS podd_sts,
			   TO_CHAR(d.podd_dates,'yyyy-MM-dd') AS podd_dates
		  FROM p_od p
		  JOIN p_odd d
		    ON d.pod_cd = p.pod_cd
		  JOIN c_prd c
		    ON p.prd_cd = c.prd_cd
          LEFT OUTER JOIN b_in b
            ON b.podd_cd = d.podd_cd
          WHERE b.podd_cd is null
		 <!--  AND TRUNC(CURRENT_DATE) = TRUNC(d.podd_dates) -->
          AND d.podd_sts = 'PLN-STS3'
		 ORDER BY 3
	</select>
	
	<!-- 생산관리 : 공정목록 조회 -->
	<select id="flowProgress" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT l.prd_cd, p.ppro_cd, p.ppro_name, e.eqp_cd,e.eqp_nm, find_emp_name(p.ppro_emp_id) as ppro_emp_nm,
			   find_code_name(e.eqp_sts) AS eqp_sts , p.pline_cd
		  FROM p_pro p
		  JOIN e_eqp e
		    ON p.eqp_cd = e.eqp_cd
		  JOIN p_line l
            ON l.pline_cd = p.pline_cd
		 <where>
	 		<if test="plineCd != null and !plineCd.equals('')">
	 			p.pline_cd = #{plineCd}
	 		</if>
	 		<if test="pproSts != null and !pproSts.equals('')">
	 			p.ppro_sts = #{pproSts}
	 		</if>
	 		<if test="prdCd != null and !prdCd.equals('')">
	 			l.prd_cd = #{prdCd}
	 		</if>
	 	 </where> 
	</select>
	
	<!-- 설비상태 수정 -->
	<update id="updateEqpSts" parameterType="com.mandu.yamyam.pro.service.ProVO">
		UPDATE e_eqp
		   SET eqp_sts =
		   CASE 
		       WHEN eqp_sts = 'EQP-STS1' THEN 'EQP-STS3'
		       WHEN eqp_sts = 'EQP-STS3' THEN 'EQP-STS1'
		       ELSE 'EQP-STS3'
		   END
	     WHERE eqp_cd = #{eqpCd}
	</update>
	
	<!-- 생산관리 : 진행 후 조회 -->
	<select id="afterProgress" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT p.ppro_cd, p.ppro_name, e.eqp_cd,e.eqp_nm, find_emp_name(ppro_emp_id) as ppro_emp_nm,
			   find_code_name(e.eqp_sts) AS eqp_sts,
			   p.ppro_er_amt, p.ppro_ot_amt, p.ppro_in_amt, p.pline_cd,
			   TO_CHAR(p.ppro_s_time, 'yyyy-MM-dd HH24:MM:SS') as ppro_s_time,
               TO_CHAR(p.ppro_e_time, 'yyyy-MM-dd HH24:MM:SS') as ppro_e_time 
		 FROM p_pro p
		 JOIN e_eqp e
		   ON p.eqp_cd = e.eqp_cd
        WHERE p.pline_cd = #{plineCd}
	</select>
	
	<!-- 입고수량 수정 -->
	<update id="updateProInAmt"  parameterType="com.mandu.yamyam.pro.service.ProVO">
		UPDATE p_pro
		 <set>
		   		<if test="pproInAmt != null">
		   			ppro_in_amt = #{pproInAmt},
		   		</if>
		   		<if test="pproErAmt != null">
		   			ppro_er_amt = #{pproErAmt},
		   		</if>
		   		<if test="pproOtAmt != null">
		   			ppro_ot_amt = #{pproOtAmt},
		   		</if>
		   		<if test="pproSTime != null and !pproSTime.equals('')">
		   			ppro_s_time = #{pproSTime},
		   		</if>
		   		<if test="pproETime != null and !pproETime.equals('')">
		   			ppro_e_time = #{pproETime},
		   		</if>
		   </set>
		WHERE ppro_cd= #{pproCd}
	</update>
	
	<!-- 완제품 재고 입력 -->
	<insert id="insertBIn" parameterType="com.mandu.yamyam.pro.service.ProVO">
		<selectKey keyProperty="prdLot" resultType="String" order="BEFORE">
			SELECT mk_prd_lot(#{prdCd}) from dual
		</selectKey>
		INSERT INTO b_in(		
							prd_lot,
							pod_date,
							bin_amt,
							samt,
							edate,
							prd_cd,
							podd_cd					
							)
		
					values(
							#{prdLot},
							CURRENT_DATE,
							#{binAmt},
							#{samt},
							ADD_MONTHS(CURRENT_DATE,11),
							#{prdCd},
							#{poddCd}
						   )
	</insert>
	
	<!-- 실시간 생산공정을 기반으로 생산공정 이력을 생성(프로시저 사용) -->
	<insert id="insertPRecord" parameterType="com.mandu.yamyam.pro.service.ProVO" statementType="CALLABLE">
		{ CALL mk_p_record(#{plineCd}) }
	</insert>
	
	
	
	<!-- 이력 테이블에 상세생산지시 업데이트 -->
	<update id="updatesPRecord" parameterType="com.mandu.yamyam.pro.service.ProVO">
		UPDATE p_record SET podd_cd = #{poddCd} WHERE pline_cd = #{plineCd}   
	</update>
	
	
	
	<!-- 실시간 공정 비워주기 -->
	<update id="resertPpro" parameterType="com.mandu.yamyam.pro.service.ProVO">
		UPDATE p_pro set ppro_in_amt = '',
                 ppro_er_amt = '',
                 ppro_ot_amt = '',
                 ppro_s_time = '',
                 ppro_e_time = '',
                 ppro_er_cd = #{pproErCd},
                 ppro_er_dtl = ''
		WHERE pline_cd = #{plineCd}
	</update>
	
	
	
	<!-- 공정 실적 조회 -->
	<select id="getResultList" resultType="com.mandu.yamyam.common.LowerKeyMap">
	   SELECT d.pod_cd,find_emp_name(r.ppro_emp_id) AS ppro_emp_nm,
      				    r.ppro_cd, r.pre_date, r.eqp_cd,find_eqp_name(r.eqp_cd) AS eqp_nm,r.ppro_name,
       				    r.ppro_emp_id, r.ppro_in_amt, r.ppro_er_amt, r.ppro_ot_amt,
       					TO_CHAR(r.ppro_s_time, 'yyyy-MM-dd HH24:MM:SS') AS ppro_s_time,
       					TO_CHAR(r.ppro_e_time, 'yyyy-MM-dd HH24:MM:SS') AS ppro_e_time,
       					r.ppro_er_cd, r.ppro_er_dtl,
                        TO_CHAR(d.pod_dates, 'yyyy-MM-dd') AS pod_dates			
		FROM p_record r
		JOIN e_eqp e ON r.eqp_cd = e.eqp_cd
        JOIN p_odd od ON od.podd_cd = r.podd_cd
        JOIN p_od d ON d.pod_cd = od.pod_cd
        JOIN p_plnd pl ON pl.pplnd_cd = d.pplnd_cd
       	
        	<if test="podCd !=null and !podCd.equals('')">
	        	WHERE d.pod_cd = #{podCd}
	        </if>
	        <if test="pproName != null and !pproName.equals('') ">
	        	AND r.ppro_name = #{pproName} 
	        </if>
	        <if test="pproErCd != null and !pproErCd.equals('') ">
	        	AND r.ppro_er_cd = #{pproErCd} 
	        </if>
	        <if test='startDate!= null and endDate != null'>
	            AND TRUNC(pl.ppln_date) BETWEEN #{startDate} AND #{endDate}
	        </if>

        ORDER BY ppro_s_time DESC, pod_dates DESC, r.eqp_cd
	</select>
	
	<!-- 에러코드 조회 -->
	<select id="getErrorList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT commd_cd AS ppro_er_cd, commd_nm AS ppro_er_dtl
		  FROM c_commd
		 WHERE comm_cd = 'ERR-PRO'
	</select>
	
	<!-- 에러코드 업데이트 -->
	<update id="updateError" parameterType="com.mandu.yamyam.pro.service.ProVO">
		UPDATE p_record
		   SET ppro_er_cd = #{pproErCd},
		       ppro_er_dtl= #{pproErDtl}
		 WHERE ppro_cd = #{pproCd}
		   AND pre_date = #{preDate}
	</update>
	
	<!-- 공정관리 조회 -->
	<select id="getProList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT find_code_name(p.ppro_sts) AS ppro_sts, p.ppro_cd, p.ppro_name, p.eqp_cd, p.ppro_emp_id, e.eqp_nm, e.md_nm,
			   find_emp_name(ppro_emp_id) as ppro_emp_nm
		  FROM p_pro p
		  JOIN e_eqp e
		    ON p.eqp_cd = e.eqp_cd
		<where>
			<if test="eqpType != null and !eqpType.equals('')">
				e.eqp_type = #{eqpType}
			</if>
		</where>
	</select>
	
	<!-- 미사용 설비 조회 -->
	<select id="noUseEqp" resultType="com.mandu.yamyam.pro.service.ProVO">
		SELECT e.eqp_cd, e.eqp_nm, e.md_nm, find_emp_name(k.chk_emp) as chk_emp
		  FROM e_eqp e left OUTER JOIN p_pro p ON e.eqp_cd = p.eqp_cd
		  JOIN e_chk k
		    ON k.eqp_cd = e.eqp_cd
	     WHERE p.eqp_cd is null 
		   AND e.eqp_sts = 'EQP-STS3'
	</select>
	
	<!-- 생산 직원 리스트 조회 -->
	<select id="getProEmpList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT emp_no as ppro_emp_id,
		       emp_nm as ppro_emp_nm
		FROM c_emp
		WHERE dept_cd = 102
	</select>
	
	
	<!-- 공정관리 : 등록 -->
	<insert id="insertProManage" parameterType="com.mandu.yamyam.pro.service.ProVO">
		INSERT INTO p_pro (
							ppro_cd,
							eqp_cd,
							ppro_name,
							ppro_emp_id,
							ppro_sts ) 
     				VALUES (
     						#{pproCd},
							#{eqpCd},
							#{pproName},
							#{pproEmpId},
							#{pproSts})
	</insert>
	
	<!-- 공정관리 : 수정 -->
	<update id="updateProManage" parameterType="com.mandu.yamyam.pro.service.ProVO">
		UPDATE p_pro
		   SET eqp_cd = #{eqpCd}
		 WHERE ppro_cd = #{pproCd}
	</update>
	
	<!-- 공정관리 : 삭제 -->
	<delete id="deleteProManage" parameterType="com.mandu.yamyam.pro.service.ProVO">
		DELETE FROM p_pro
			  WHERE ppro_cd = #{pproCd}
	</delete>
	
	<!-- 제품 공정 흐름도 조회 -->
	<select id="getFlowList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT p.pline_cd, c.prd_cd, c.prd_nm
		  FROM c_prd c
		  LEFT OUTER JOIN p_line p
		    ON p.prd_cd = c.prd_cd
		  ORDER BY 2
	</select>
	
	<!-- 제품 공정 흐름도 관리 -->
	<select id="flowManage" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT p.ppro_cd, p.ppro_name, e.eqp_cd, e.eqp_nm
		  FROM p_pro p
		  JOIN e_eqp e
			ON p.eqp_cd=e.eqp_cd
		WHERE p.pline_cd = #{plineCd}
	</select>
	
	<!-- 공정 목록 조회 -->
	<select id="viewProgress" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT p.ppro_cd, p.ppro_name, e.eqp_cd,e.eqp_nm, find_emp_name(ppro_emp_id) as ppro_emp_nm,
			   find_code_name(e.eqp_sts) AS eqp_sts 
		  FROM p_pro p
		  JOIN e_eqp e
		    ON p.eqp_cd = e.eqp_cd
	    <where>
			<if test="pproSts != null and !pproSts.equals('')">
	 			p.ppro_sts = #{pproSts}
	 		</if>
 		</where>
	</select>
	
	<!-- 생산라인 저장 -->
	<insert id="insertPline" parameterType="com.mandu.yamyam.pro.service.ProVO">
		INSERT INTO p_line (pline_cd,
						    prd_cd)
			   VALUES(#{plineCd},
			   	      #{prdCd})
	</insert>
	
	<!-- 생산공정테이블에 생산라인 업데이트 -->
	<update id="updatePline" parameterType="com.mandu.yamyam.pro.service.ProVO">
		UPDATE p_pro
		SET pline_cd = #{plineCd}
		WHERE ppro_cd = #{pproCd}
	</update>
	
</mapper>