<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mandu.yamyam.eqp.mapper.EqpMapper">

	<!-- 설비관리/비가동 - 설비전체조회 -->
	<select id="getEqpList" resultType="com.mandu.yamyam.common.LowerKeyMap"> 
		SELECT e.eqp_cd,
		       e.eqp_nm,
		       e.md_nm,
		       find_act_name(e.act_cd) as "act_nm",
		       TO_CHAR(e.mk_date, 'yyyy-MM-dd') as "mk_date",
		       TO_CHAR(e.buy_date, 'yyyy-MM-dd') as "buy_date",
		       e.high_temp,
		       e.low_temp,
		       e.chk_cycle,
               TO_CHAR((select MAX(chk_date) from e_chk where eqp_cd = e.eqp_cd), 'yyyy-MM-dd') AS chk_date,
		       find_code_name(e.eqp_type) AS eqp_type,
		       find_code_name(e.eqp_sts) AS eqp_sts
		 FROM e_eqp e
		 ORDER BY e.eqp_cd
	</select>
	
	<!-- 설비단건 조회 -->
	<select id="getEqp" parameterType="com.mandu.yamyam.eqp.service.EqpVO" resultType="com.mandu.yamyam.eqp.service.EqpVO">
		SELECT eqp_cd,
		       eqp_nm,
		       md_nm,
		       act_cd,
		       eqp_sts,
			   TRUNC(mk_date) as "mk_date",
		       TRUNC(buy_date) as "buy_date",
			   uph,
			   high_temp,
			   low_temp,
   			   chk_cycle,
			   eqp_type as "eqp_type_cd",
			   find_code_name(eqp_type) AS "eqp_type_nm",
			   img
		 FROM e_eqp
		 WHERE eqp_cd = #{eqpCd}
	</select>
	
	<!-- 설비관리 - 설비등록 -->
	<insert id="insertEqp" parameterType="com.mandu.yamyam.eqp.service.EqpVO">
		<selectKey keyProperty="eqpCd" resultType="String" order="BEFORE">
			select mk_eqp_cd from dual
		</selectKey>
		INSERT INTO e_eqp(
						  eqp_cd,
						  act_cd,
						  eqp_nm,
						  md_nm,
						  mk_date,
						  buy_date,
						  chk_cycle,
						  eqp_sts,
						  uph,
						  <if test="img != null">
						      img,
						  </if>
						  eqp_type,
						  high_temp,
						  low_temp
						  )
				  VALUES (
				          #{eqpCd},
				          #{actCd},
				          #{eqpNm},
				          #{mdNm},
				          #{mkDate},
				          #{buyDate},
				          #{chkCycle},
				          #{eqpSts},
				          #{uph},
				          <if test="img != null">
				              #{img},
				          </if>
				          #{eqpType},
				          #{highTemp},
				          #{lowTemp}
				          )
	</insert>
	
	<!-- 설비관리 - 설비 수정 -->
	<update id="updateEqp" parameterType="com.mandu.yamyam.eqp.service.EqpVO">
		UPDATE e_eqp
		<set>
			act_cd = #{actCd},
            eqp_nm = #{eqpNm},
            md_nm = #{mdNm},
            mk_date = #{mkDate},
            buy_date = #{buyDate},
            chk_cycle = #{chkCycle},
            eqp_sts = #{eqpSts},
            uph = #{uph},
            <if test="img != null">
            	img = #{img},
            </if>
            eqp_type = #{eqpType},
            high_temp = #{highTemp},
            low_temp = #{lowTemp}
		</set>
		
		WHERE eqp_cd = #{eqpCd}
	</update>
	
	<!-- 공통 - 설비 거래처만 전체조회  -->
	<select id="getEqpActList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT act_cd, act_nm
		FROM c_act
		WHERE act_div = 'ACT-TYPE3'
	</select>
	
	<!-- 설비관리 - 설비목록 모달 조회 -->
	<select id="getEqpListModal" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT eqp_cd, eqp_nm, find_code_name(eqp_type) AS "eqp_type" 
		FROM e_eqp
	</select>
	
	<!-- 설비관리 - 설비 삭제 -->
	<delete id="eqpDelete" parameterType="com.mandu.yamyam.eqp.service.EqpVO">
		DELETE FROM e_eqp
		WHERE eqp_cd = #{eqpCd}
	</delete>
	
	<!-- 비가동 - 비가동 리스트 조회 -->
	<select id="getUopList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT uop_cd,
		       eqp_cd,
		       find_eqp_name(eqp_cd) AS eqp_nm,
		       uop_type,
		       find_code_name(uop_type) AS uop_type_nm,
		       uop_info,
		       to_char(uop_stime, 'yyyy-mm-dd hh24:mi') AS uop_stime,
		       to_char(uop_etime, 'yyyy-mm-dd hh24:mi') AS uop_etime
		FROM e_uop
		WHERE uop_stime BETWEEN TRUNC(CURRENT_DATE - 7) AND TRUNC(CURRENT_DATE + 1)
		ORDER BY uop_stime DESC
	</select>
	
	<!-- 비가동 - 비가동 리스트 조건 조회 -->
	<select id="findUopList" parameterType="com.mandu.yamyam.eqp.service.UopVO" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT uop_cd,
		       eqp_cd,
		       find_eqp_name(eqp_cd) AS eqp_nm,
		       uop_type,
		       find_code_name(uop_type) AS uop_type_nm,
		       uop_info,
		       to_char(uop_stime, 'yyyy-mm-dd hh24:mi') AS uop_stime,
		       to_char(uop_etime, 'yyyy-mm-dd hh24:mi') AS uop_etime
		FROM e_uop
		<where>
			<if test="eqpCd != null and !eqpCd.equals('')">
				eqp_cd = #{eqpCd}
			</if>
            <if test='startDate != null and endDate != null'>
              AND TRUNC(uop_stime) BETWEEN #{startDate} AND #{endDate}
            </if>
        </where>
        
		ORDER BY uop_stime DESC
	</select>
	
	<!-- 비가동 - 비가동 등록 -->
	<insert id="insertUop" parameterType="com.mandu.yamyam.eqp.service.UopVO" statementType="CALLABLE">
		<selectKey keyProperty="uopCd" resultType="String" order="BEFORE">
			SELECT mk_uop_cd FROM dual
		</selectKey>
		{ CALL INSERT_UOP(
		                 #{uopCd, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		                 #{eqpCd, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		                 #{uopType, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		                 #{uopInfo, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		                 #{uopStime, mode=IN, jdbcType=DATE, javaType=java.util.Date},
		                 #{result, mode=OUT, jdbcType=NUMERIC, javaType=int}
		                 )}
	</insert>
	
	<!-- 비가동 - 비가동 수정 -->
	<update id="updateUop" parameterType="com.mandu.yamyam.eqp.service.UopVO" statementType="CALLABLE">
		{CALL UPDATE_UOP(#{uopCd, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		                 #{eqpCd, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String},
		                 #{uopEtime, mode=IN, jdbcType=VARCHAR, javaType=java.util.Date},
		                 #{result, mode=OUT, jdbcType=NUMERIC, javaType=int}
		                 )}
	</update>
	
	<!-- 비가동 - 비가동 삭제 -->
	<delete id="deleteUop" parameterType="String">
		DELETE FROM e_uop
		WHERE uop_cd = #{value}
	</delete>
	
	<!-- 비가동 비가동 리스트 전체조회(일주일치) -->
	<select id="getUop" parameterType="String" resultType="com.mandu.yamyam.eqp.service.UopVO">
		SELECT uop_cd,
		       eqp_cd,
		       find_eqp_name(eqp_cd) AS eqp_nm,
		       uop_type,
		       uop_info,
		       to_char(uop_stime + 9/24, 'yyyy-mm-dd hh24:mi:ss') AS uop_stime
		FROM e_uop
		WHERE eqp_cd = #{value}
		  AND uop_etime IS NULL
		ORDER BY uop_stime DESC
	</select>
	
	<!-- 설비점검 - 설비 점검 전체 조회(일주일치) -->
	<select id="getChkList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT  e.eqp_cd,
		        find_eqp_name(e.eqp_cd) AS eqp_nm,
		        find_code_name(e.eqp_type) AS eqp_type,
		        e.chk_cycle,
		        TO_CHAR(c.chk_date, 'yyyy-MM-dd') AS chk_date,
		        TO_CHAR(c.chk_date + e.chk_cycle, 'yyyy-MM-dd') AS next_chk_date,
		        find_code_name(c.chk_rst) AS chk_rst,
		        c.chk_record,
		        c.chk_emp,
		        find_emp_name(c.chk_emp) as chk_emp_nm
		FROM e_eqp e JOIN e_chk c
		  ON e.eqp_cd = c.eqp_cd
		WHERE c.chk_date BETWEEN TRUNC(CURRENT_DATE - 7) AND (CURRENT_DATE + 1)
		ORDER BY c.chk_date DESC
	</select>
	
	<!-- 설비 직원 리스트 조회 -->
	<select id="getEqpEmpList" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT emp_no as chk_emp,
		       emp_nm as chk_emp_nm
		FROM c_emp
		WHERE dept_cd = 104
	</select>
	
	<!-- 점검 대상 설비 조회 -->
	<select id="getEqpToChkList" parameterType="int" resultType="com.mandu.yamyam.common.LowerKeyMap">
        select e.eqp_cd,
               e.eqp_nm,
               e.eqp_type, 
               e.chk_cycle,
               to_char(c.chk_date, 'yyyy-MM-dd') AS chk_date,
               to_char(c.next_chk_date, 'yyyy-MM-dd') AS next_chk_date
        from ( select  eqp_cd,
	                   find_eqp_name(eqp_cd) AS eqp_nm,
	                   find_eqp_type(eqp_cd) AS eqp_type,
	                   find_chk_cycle(eqp_cd) AS chk_cycle,
	                   max(chk_date) AS chk_date,
	                   (max(chk_date) + find_chk_cycle(eqp_cd)) AS next_chk_date
	          from     e_chk
	          group by eqp_cd) c right outer join e_eqp e
           on c.eqp_cd = e.eqp_cd
        WHERE chk_date IS NULL
		  OR  (trunc(c.chk_date) + trunc(c.chk_cycle) - trunc(CURRENT_DATE)) <![CDATA[<=]]> #{value}
		ORDER BY c.chk_date DESC
	</select>
	
	<!-- 설비 점검 등록 -->
	<insert id="insertEqpChk" parameterType="com.mandu.yamyam.eqp.service.ChkVO">
		INSERT INTO e_chk(
                  chk_date,
                  eqp_cd,
                  chk_rst,
                  chk_record,
                  chk_emp
                  )
           VALUES (
                   TRUNC(#{chkDate}),
                   #{eqpCd},
                   name_to_code(#{chkRst}),
                   #{chkRecord},
                   #{chkEmp}
                   )
	</insert>
	
	<!-- 설비 점검 수정 -->
	<update id="updateEqpChk" parameterType="com.mandu.yamyam.eqp.service.ChkVO">
		UPDATE e_chk
		SET    chk_rst = name_to_code(#{chkRst}),
		       chk_record = #{chkRecord},
		       chk_emp = #{chkEmp}
		WHERE  chk_date = TRUNC(#{chkDate})
		  AND  eqp_cd = #{eqpCd}
	</update>
	
	<!-- 설비 점검 조건 조회 -->
	<select id="findEqpChkList" parameterType="com.mandu.yamyam.eqp.service.ChkVO" resultType="com.mandu.yamyam.common.LowerKeyMap">
		SELECT  e.eqp_cd,
		        find_eqp_name(e.eqp_cd) AS eqp_nm,
		        find_code_name(e.eqp_type) AS eqp_type,
		        e.chk_cycle,
		        TO_CHAR(c.chk_date, 'yyyy-MM-dd') AS chk_date,
		        TO_CHAR(c.chk_date + e.chk_cycle, 'yyyy-MM-dd') AS next_chk_date,
		        find_code_name(c.chk_rst) AS chk_rst,
		        c.chk_record,
		        c.chk_emp,
		        find_emp_name(c.chk_emp) as chk_emp_nm
		FROM e_eqp e JOIN e_chk c
		  ON e.eqp_cd = c.eqp_cd
		
		<where>
			<choose>
				<when test="eqpType == null or eqpType.equals('')">
					e.eqp_type = e.eqp_type
				</when>
				<otherwise>
					e.eqp_type = #{eqpType}
				</otherwise>
			</choose>
			<choose>
				<when test="chkRst == null or chkRst.equals('')">
					AND c.chk_rst = c.chk_rst
				</when>
				<otherwise>
					AND c.chk_rst = #{chkRst}
				</otherwise>
			</choose>
			
			AND c.chk_date BETWEEN TRUNC(#{startDate}) AND TRUNC(#{endDate})
		</where>
		
		ORDER BY c.chk_date DESC
	</select>
	
	<delete id="deleteEqpChk" parameterType="com.mandu.yamyam.eqp.service.ChkVO">
		DELETE FROM e_chk
		WHERE chk_date = TRUNC(#{chkDate})
		  AND eqp_cd = #{eqpCd}
	</delete>
</mapper>
